---

- name: 'List available drives'
  shell: 'blkid -s UUID -o value'
  register: 'available_drives'

- name: 'Get mountable drives and set default values'
  set_fact:
    device_mounts: "{{ device_mounts +
        [item | combine(
          {
            'path': (item.path | default('/mnt/disk-' + loop_index | string)),
            'fstype': (item.fstype | default('ext4')),
            'opts': (item.opts | default('rw,nofail')),
          }
        )]
      }}"
  loop: '{{ mounts }}'
  loop_control:
    index_var: 'loop_index'
  when: 'item.uuid in available_drives.stdout_lines'

- name: 'Devices to Mount'
  debug:
    var: 'device_mounts'

- name: 'Ensure mount point directory exists'
  file:
    path: "{{ item.path }}"
    state: 'directory'
  loop: '{{ device_mounts }}'

- name: 'Ensure mount point directory is immutable'
  command: 'chattr +i {{ item.path }}'
  loop: '{{ device_mounts }}'

- name: 'Mount Hardrives'
  mount:
    path: '{{ item.path }}'
    src: 'UUID={{ item.uuid }}'
    fstype: '{{ item.fstype }}'
    opts: '{{ item.opts }}'
    state: 'mounted'
  loop: '{{ device_mounts }}'
  register: 'mount_info'

- name: 'Check if bind source exists'
  stat:
    path: '{{ item.src }}'
  loop: '{{ binds }}'
  register: 'bind_sources'

- name: 'Cross mount binds'
  mount:
    path: '{{ item.item.dest }}'
    src: '{{ item.item.src }}'
    state: 'mounted'
    fstype: 'none'
    opts: 'bind,nofail'
  loop: '{{ bind_sources.results }}'
  when: 'item.stat.exists'
